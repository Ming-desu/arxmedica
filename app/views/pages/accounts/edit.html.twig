{% extends "/layouts/main.html.twig" %}

{% block title %}
  Accounts
{% endblock %}

{% block main %}
  <div class="container">
    <div class="d-flex justify-content-between">
      <div>
        <h1 class="h2">Edit existing account</h1>
        <p class="text-muted">Fill up all the required fields.</p>
      </div>
      <form action="{{ base_url }}/accounts/delete" method="POST" name="delete">
        <input type="hidden" name="id" value="{{ account.id }}">
        <button type="submit" class="btn btn-danger" name="submit"><i class="las la-spinner la-spin la-1x mr-2"></i>Delete</button>
      </form>
    </div>
    <form action="{{ base_url }}/accounts/update" name="accounts" class="row" method="POST" novalidate>
      <div class="col-md-6 col-lg-7 mb-4">
        <div class="card mb-4">
          <div class="card-body">
            <div class="card-title">
              <h5 class="m-0">General Information</h5>
              <p class="card-text">
                <small class="text-muted">Basic information about the user such as name, sex, and others.</small>
              </p>
            </div>
            <div id="alert"></div>
            <input type="hidden" name="id" value="{{ account.id }}">
            <div class="row">
              <div class="col-lg-6 mb-2">
                <label for="first_name" class="form-label">First name</label>
                <input type="text" id="first_name" name="first_name" class="form-control" placeholder="Johnny" value="{{ account.first_name }}">
              </div>
              <div class="col-lg-6 mb-2">
                <label for="last_name" class="form-label">Last name</label>
                <input type="text" id="last_name" name="last_name" class="form-control" placeholder="Smith" value="{{ account.last_name }}">
              </div>
            </div>
            <div class="d-flex justify-content-end">
              <div class="form-check mr-2">
                <input type="radio" id="male" class="form-check-input" name="sex" value="1" {{ account.sex == '1' ? 'checked' : '' }}>
                <label for="male" class="form-check-label">Male</label>
              </div>
              <div class="form-check">
                <input type="radio" id="female" class="form-check-input" name="sex" value="0" {{ account.sex == '0' ? 'checked' : '' }}>
                <label for="female" class="form-check-label">Female</label>
              </div>
            </div>
          </div>
        </div>
        <div class="card">
          <div class="card-body">
            <div class="card-title">
              <h5 class="m-0">Credentials Information</h5>
              <p class="card-text">
                <small class="text-muted">The information to use in order to gain access in the system.</small>
              </p>
            </div>
            <div class="row">
              <div class="col-lg-6 mb-2">
                <label for="username" class="form-label">Username</label>
                <input type="text" id="username" name="username" class="form-control" placeholder="@johnny12" value="{{ account.username }}">
              </div>
              <div class="w-100"></div>
              <div class="col-lg-6 mb-2">
                <label for="password" class="form-label">Password</label>
                <div class="input-group">
                  <input type="password" id="password" name="password" class="form-control password password-random border-right-0">
                  <span class="input-group-text bg-white">
                    <i class="las la-eye-slash btn-toggle-password m-0"></i>
                  </span>
                </div>
              </div>
              <div class="col-lg-6 mb-2">
                <label for="password_confirm" class="form-label">Confirm Password</label>
                <input type="password" id="password_confirm" name="password_confirm" class="form-control password password-random">
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-md-6 col-lg-5 mb-4">
        <div class="card mb-4">
          <div class="card-body">
            <div class="card-title">
              <h5 class="m-0">User Permissions</h5>
              <p class="card-text">
                <small class="text-muted">Control the modules that the user can access.</small>
              </p>
            </div>
            <label class="form-label">Modules</label>
            <div class="row">
              {% set permissions = ['stores', 'inventory', 'quotations', 'expenses', 'accounts', 'settings'] %}
              {% for permission in permissions %}
                <div class="col-lg-6 mb-2">
                  <div class="form-check">
                    <input type="checkbox" id="permission_{{ permission }}" class="form-check-input" name="permissions[]" value="{{ permission }}" {{ permission in (account.permissions|split(',')) ? 'checked' : '' }}>
                    <label for="permission_{{ permission }}" class="form-check-label">{{ permission|capitalize }}</label>
                  </div>
                </div>  
              {% endfor %}
            </div>
          </div>
        </div>
        <div class="card">
          <div class="card-body">
            <div class="card-title">
              <h5 class="m-0">Account Status</h5>
              <p class="card-text">
                <small class="text-muted">Specify if current user is active or inactive.</small>
              </p>
            </div>
            <div class="mb-2">
              {% set statuses = ['active', 'inactive'] %}
              <label for="status" class="form-label">Status</label>
              <select name="status" id="status" class="form-select">
                <option value="" hidden selected>Select status:</option>
                {% for status in statuses %}
                  <option value="{{ status }}" {{ status == account.status ? 'selected' : '' }}>{{ status|capitalize }}</option>
                {% endfor %}
              </select>
            </div>
          </div>
        </div>
      </div>
      <div class="text-right">
        <a href="{{ base_url }}/accounts" class="btn btn-light mr-2">Cancel</a>
        <button type="submit" class="btn btn-primary" name="submit"><i class="las la-spinner la-spin la-1x mr-2"></i>Save Changes</button>
      </div>
    </form>
  </div>
{% endblock %}
{% block script %}
  <script src="/js/helpers/base.js"></script>
  <script src="/js/helpers/form-password.js"></script>
  <script>
    const form = document.forms.accounts;
    const formDelete = document.forms.delete;

    validate.validators.presence.message = "must not be left empty.";
    const constraints = {
      first_name: {
        presence: {
          allowEmpty: false
        },
        format: {
          pattern: "[a-z ]+",
          flags: "i",
          message: "can only contain a-z and space"
        }
      },
      last_name: {
        presence: {
          allowEmpty: false
        },
        format: {
          pattern: "[a-z ]+",
          flags: "i",
          message: "can only contain a-z and space"
        }
      },
      sex: {
        presence: true
      },
      username: {
        presence: {
          allowEmpty: false
        },
        length: {
          minimum: 4,
          maximum: 20
        },
        format: {
          pattern: "[a-z0-9_]+",
          flags: "i",
          message: "can only contain a-z, 0-9, and underscore"
        }
      },
      password: {
        length: {
          minimum: 8,
          maximum: 32
        }
      },
      password_confirm: {
        equality: {
          attribute: "password",
          message: "^The passwords does not match"
        }
      }
    }

    const handleFormSubmit = async function(e)
    {
      e.preventDefault();

      closeAlert();
      let errors = validate(this, constraints, {format: 'flat'});
      showError(errors || []);

      if (errors)
        return false;

      this.submit.disabled = true;
      try {
        let permissions = [];
        this.querySelectorAll('input[name="permissions[]"]:checked').forEach(input => permissions.push(input.value));
        
        const res = await update(this.action, {
          id: this.id.value,
          first_name: this.first_name.value,
          last_name: this.last_name.value,
          sex: this.sex.value,
          username: this.username.value,
          password: this.password.value,
          permissions: permissions.join(','),
          status: this.status.value
        });
        
        window.location.href = `{{ base_url }}/accounts`;
      }
      catch(err) {}
      this.submit.disabled = false;
    };

    const handleFormDeleteSubmit = async function(e) 
    {
      e.preventDefault();

      if (!confirm('Are you sure you want to delete this?'))
        return false;

      this.submit.disabled = true;
      try {
        let res = await remove(this.action, 
          {
            id: this.id.value
          },
        );

        window.location.href = '{{ base_url }}/accounts';
      }
      catch(err) {}
      this.submit.disabled = false;
    };

    form.addEventListener('submit', handleFormSubmit);
    formDelete.addEventListener('submit', handleFormDeleteSubmit);
  </script>
{% endblock %}